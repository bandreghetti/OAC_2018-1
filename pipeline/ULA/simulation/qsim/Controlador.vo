// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus II 64-Bit"
// VERSION "Version 13.0.0 Build 156 04/24/2013 SJ Web Edition"

// DATE "06/17/2018 09:31:53"

// 
// Device: Altera EP2C35F672C6 Package FBGA672
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module Controlador (
	RegWrite,
	OpCode,
	ReadMem,
	WriteMem,
	ALUSrc,
	Branch,
	MemToReg,
	OpALU,
	RegDST);
output 	RegWrite;
input 	[5:0] OpCode;
output 	ReadMem;
output 	WriteMem;
output 	[1:0] ALUSrc;
output 	[1:0] Branch;
output 	[1:0] MemToReg;
output 	[2:0] OpALU;
output 	[1:0] RegDST;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \inst43~0_combout ;
wire \inst43~1_combout ;
wire \inst43~2_combout ;
wire \WriteMem_Sw~0_combout ;
wire \inst48~0_combout ;
wire \WriteMem_Sw~combout ;
wire \ALUSrc1Ori~0_combout ;
wire \ALUSrc1Ori~combout ;
wire \inst98~0_combout ;
wire \inst98~1_combout ;
wire \inst53~0_combout ;
wire \inst55~0_combout ;
wire \inst34~combout ;
wire \inst~0_combout ;
wire \inst56~2_combout ;
wire \inst56~3_combout ;
wire \inst57~3_combout ;
wire \inst57~combout ;
wire \Or3~2_combout ;
wire \Or3~3_combout ;
wire \MemToReg1Jal~combout ;
wire \OpALU1TipoR~combout ;
wire [5:0] \OpCode~combout ;


cycloneii_io \OpCode[0]~I (
	.datain(gnd),
	.oe(gnd),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(\OpCode~combout [0]),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(OpCode[0]));
// synopsys translate_off
defparam \OpCode[0]~I .input_async_reset = "none";
defparam \OpCode[0]~I .input_power_up = "low";
defparam \OpCode[0]~I .input_register_mode = "none";
defparam \OpCode[0]~I .input_sync_reset = "none";
defparam \OpCode[0]~I .oe_async_reset = "none";
defparam \OpCode[0]~I .oe_power_up = "low";
defparam \OpCode[0]~I .oe_register_mode = "none";
defparam \OpCode[0]~I .oe_sync_reset = "none";
defparam \OpCode[0]~I .operation_mode = "input";
defparam \OpCode[0]~I .output_async_reset = "none";
defparam \OpCode[0]~I .output_power_up = "low";
defparam \OpCode[0]~I .output_register_mode = "none";
defparam \OpCode[0]~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_io \OpCode[3]~I (
	.datain(gnd),
	.oe(gnd),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(\OpCode~combout [3]),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(OpCode[3]));
// synopsys translate_off
defparam \OpCode[3]~I .input_async_reset = "none";
defparam \OpCode[3]~I .input_power_up = "low";
defparam \OpCode[3]~I .input_register_mode = "none";
defparam \OpCode[3]~I .input_sync_reset = "none";
defparam \OpCode[3]~I .oe_async_reset = "none";
defparam \OpCode[3]~I .oe_power_up = "low";
defparam \OpCode[3]~I .oe_register_mode = "none";
defparam \OpCode[3]~I .oe_sync_reset = "none";
defparam \OpCode[3]~I .operation_mode = "input";
defparam \OpCode[3]~I .output_async_reset = "none";
defparam \OpCode[3]~I .output_power_up = "low";
defparam \OpCode[3]~I .output_register_mode = "none";
defparam \OpCode[3]~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_io \OpCode[2]~I (
	.datain(gnd),
	.oe(gnd),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(\OpCode~combout [2]),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(OpCode[2]));
// synopsys translate_off
defparam \OpCode[2]~I .input_async_reset = "none";
defparam \OpCode[2]~I .input_power_up = "low";
defparam \OpCode[2]~I .input_register_mode = "none";
defparam \OpCode[2]~I .input_sync_reset = "none";
defparam \OpCode[2]~I .oe_async_reset = "none";
defparam \OpCode[2]~I .oe_power_up = "low";
defparam \OpCode[2]~I .oe_register_mode = "none";
defparam \OpCode[2]~I .oe_sync_reset = "none";
defparam \OpCode[2]~I .operation_mode = "input";
defparam \OpCode[2]~I .output_async_reset = "none";
defparam \OpCode[2]~I .output_power_up = "low";
defparam \OpCode[2]~I .output_register_mode = "none";
defparam \OpCode[2]~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_io \OpCode[5]~I (
	.datain(gnd),
	.oe(gnd),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(\OpCode~combout [5]),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(OpCode[5]));
// synopsys translate_off
defparam \OpCode[5]~I .input_async_reset = "none";
defparam \OpCode[5]~I .input_power_up = "low";
defparam \OpCode[5]~I .input_register_mode = "none";
defparam \OpCode[5]~I .input_sync_reset = "none";
defparam \OpCode[5]~I .oe_async_reset = "none";
defparam \OpCode[5]~I .oe_power_up = "low";
defparam \OpCode[5]~I .oe_register_mode = "none";
defparam \OpCode[5]~I .oe_sync_reset = "none";
defparam \OpCode[5]~I .operation_mode = "input";
defparam \OpCode[5]~I .output_async_reset = "none";
defparam \OpCode[5]~I .output_power_up = "low";
defparam \OpCode[5]~I .output_register_mode = "none";
defparam \OpCode[5]~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_io \OpCode[4]~I (
	.datain(gnd),
	.oe(gnd),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(\OpCode~combout [4]),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(OpCode[4]));
// synopsys translate_off
defparam \OpCode[4]~I .input_async_reset = "none";
defparam \OpCode[4]~I .input_power_up = "low";
defparam \OpCode[4]~I .input_register_mode = "none";
defparam \OpCode[4]~I .input_sync_reset = "none";
defparam \OpCode[4]~I .oe_async_reset = "none";
defparam \OpCode[4]~I .oe_power_up = "low";
defparam \OpCode[4]~I .oe_register_mode = "none";
defparam \OpCode[4]~I .oe_sync_reset = "none";
defparam \OpCode[4]~I .operation_mode = "input";
defparam \OpCode[4]~I .output_async_reset = "none";
defparam \OpCode[4]~I .output_power_up = "low";
defparam \OpCode[4]~I .output_register_mode = "none";
defparam \OpCode[4]~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_lcell_comb \inst43~0 (
// Equation(s):
// \inst43~0_combout  = (\OpCode~combout [5]) # ((\OpCode~combout [4]) # ((\OpCode~combout [1] & !\OpCode~combout [2])))

	.dataa(\OpCode~combout [1]),
	.datab(\OpCode~combout [2]),
	.datac(\OpCode~combout [5]),
	.datad(\OpCode~combout [4]),
	.cin(gnd),
	.combout(\inst43~0_combout ),
	.cout());
// synopsys translate_off
defparam \inst43~0 .lut_mask = 16'hFFF2;
defparam \inst43~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_lcell_comb \inst43~1 (
// Equation(s):
// \inst43~1_combout  = (\OpCode~combout [2]) # ((\OpCode~combout [4]) # ((!\OpCode~combout [1] & \OpCode~combout [5])))

	.dataa(\OpCode~combout [1]),
	.datab(\OpCode~combout [2]),
	.datac(\OpCode~combout [5]),
	.datad(\OpCode~combout [4]),
	.cin(gnd),
	.combout(\inst43~1_combout ),
	.cout());
// synopsys translate_off
defparam \inst43~1 .lut_mask = 16'hFFDC;
defparam \inst43~1 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_lcell_comb \inst43~2 (
// Equation(s):
// \inst43~2_combout  = (\OpCode~combout [3] & (!\inst43~0_combout  & ((\inst43~1_combout ) # (!\OpCode~combout [0])))) # (!\OpCode~combout [3] & (!\inst43~1_combout  & (\OpCode~combout [0] $ (!\inst43~0_combout ))))

	.dataa(\OpCode~combout [0]),
	.datab(\OpCode~combout [3]),
	.datac(\inst43~0_combout ),
	.datad(\inst43~1_combout ),
	.cin(gnd),
	.combout(\inst43~2_combout ),
	.cout());
// synopsys translate_off
defparam \inst43~2 .lut_mask = 16'h0C25;
defparam \inst43~2 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_lcell_comb \WriteMem_Sw~0 (
// Equation(s):
// \WriteMem_Sw~0_combout  = (\OpCode~combout [1] & (\OpCode~combout [0] & !\OpCode~combout [4]))

	.dataa(\OpCode~combout [1]),
	.datab(\OpCode~combout [0]),
	.datac(vcc),
	.datad(\OpCode~combout [4]),
	.cin(gnd),
	.combout(\WriteMem_Sw~0_combout ),
	.cout());
// synopsys translate_off
defparam \WriteMem_Sw~0 .lut_mask = 16'h0088;
defparam \WriteMem_Sw~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_lcell_comb \inst48~0 (
// Equation(s):
// \inst48~0_combout  = (\WriteMem_Sw~0_combout  & ((\OpCode~combout [3] & (\OpCode~combout [2] & !\OpCode~combout [5])) # (!\OpCode~combout [3] & (!\OpCode~combout [2] & \OpCode~combout [5]))))

	.dataa(\WriteMem_Sw~0_combout ),
	.datab(\OpCode~combout [3]),
	.datac(\OpCode~combout [2]),
	.datad(\OpCode~combout [5]),
	.cin(gnd),
	.combout(\inst48~0_combout ),
	.cout());
// synopsys translate_off
defparam \inst48~0 .lut_mask = 16'h0280;
defparam \inst48~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_lcell_comb WriteMem_Sw(
// Equation(s):
// \WriteMem_Sw~combout  = (\OpCode~combout [3] & (\OpCode~combout [5] & (\WriteMem_Sw~0_combout  & !\OpCode~combout [2])))

	.dataa(\OpCode~combout [3]),
	.datab(\OpCode~combout [5]),
	.datac(\WriteMem_Sw~0_combout ),
	.datad(\OpCode~combout [2]),
	.cin(gnd),
	.combout(\WriteMem_Sw~combout ),
	.cout());
// synopsys translate_off
defparam WriteMem_Sw.lut_mask = 16'h0080;
defparam WriteMem_Sw.sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_io \OpCode[1]~I (
	.datain(gnd),
	.oe(gnd),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(\OpCode~combout [1]),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(OpCode[1]));
// synopsys translate_off
defparam \OpCode[1]~I .input_async_reset = "none";
defparam \OpCode[1]~I .input_power_up = "low";
defparam \OpCode[1]~I .input_register_mode = "none";
defparam \OpCode[1]~I .input_sync_reset = "none";
defparam \OpCode[1]~I .oe_async_reset = "none";
defparam \OpCode[1]~I .oe_power_up = "low";
defparam \OpCode[1]~I .oe_register_mode = "none";
defparam \OpCode[1]~I .oe_sync_reset = "none";
defparam \OpCode[1]~I .operation_mode = "input";
defparam \OpCode[1]~I .output_async_reset = "none";
defparam \OpCode[1]~I .output_power_up = "low";
defparam \OpCode[1]~I .output_register_mode = "none";
defparam \OpCode[1]~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_lcell_comb \ALUSrc1Ori~0 (
// Equation(s):
// \ALUSrc1Ori~0_combout  = (!\OpCode~combout [4] & (!\OpCode~combout [1] & !\OpCode~combout [5]))

	.dataa(vcc),
	.datab(\OpCode~combout [4]),
	.datac(\OpCode~combout [1]),
	.datad(\OpCode~combout [5]),
	.cin(gnd),
	.combout(\ALUSrc1Ori~0_combout ),
	.cout());
// synopsys translate_off
defparam \ALUSrc1Ori~0 .lut_mask = 16'h0003;
defparam \ALUSrc1Ori~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_lcell_comb ALUSrc1Ori(
// Equation(s):
// \ALUSrc1Ori~combout  = (\OpCode~combout [3] & (\OpCode~combout [2] & (\OpCode~combout [0] & \ALUSrc1Ori~0_combout )))

	.dataa(\OpCode~combout [3]),
	.datab(\OpCode~combout [2]),
	.datac(\OpCode~combout [0]),
	.datad(\ALUSrc1Ori~0_combout ),
	.cin(gnd),
	.combout(\ALUSrc1Ori~combout ),
	.cout());
// synopsys translate_off
defparam ALUSrc1Ori.lut_mask = 16'h8000;
defparam ALUSrc1Ori.sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_lcell_comb \inst98~0 (
// Equation(s):
// \inst98~0_combout  = (\OpCode~combout [4] & (((!\OpCode~combout [5])))) # (!\OpCode~combout [4] & (\OpCode~combout [1] & ((!\OpCode~combout [2]))))

	.dataa(\OpCode~combout [1]),
	.datab(\OpCode~combout [5]),
	.datac(\OpCode~combout [2]),
	.datad(\OpCode~combout [4]),
	.cin(gnd),
	.combout(\inst98~0_combout ),
	.cout());
// synopsys translate_off
defparam \inst98~0 .lut_mask = 16'h330A;
defparam \inst98~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_lcell_comb \inst98~1 (
// Equation(s):
// \inst98~1_combout  = (\OpCode~combout [0] & (((\OpCode~combout [5] & \inst98~0_combout )))) # (!\OpCode~combout [0] & (\OpCode~combout [3] & (!\OpCode~combout [5] & !\inst98~0_combout )))

	.dataa(\OpCode~combout [0]),
	.datab(\OpCode~combout [3]),
	.datac(\OpCode~combout [5]),
	.datad(\inst98~0_combout ),
	.cin(gnd),
	.combout(\inst98~1_combout ),
	.cout());
// synopsys translate_off
defparam \inst98~1 .lut_mask = 16'hA004;
defparam \inst98~1 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_lcell_comb \inst53~0 (
// Equation(s):
// \inst53~0_combout  = (\OpCode~combout [0] & (\ALUSrc1Ori~0_combout  & !\OpCode~combout [3]))

	.dataa(\OpCode~combout [0]),
	.datab(\ALUSrc1Ori~0_combout ),
	.datac(vcc),
	.datad(\OpCode~combout [3]),
	.cin(gnd),
	.combout(\inst53~0_combout ),
	.cout());
// synopsys translate_off
defparam \inst53~0 .lut_mask = 16'h0088;
defparam \inst53~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_lcell_comb \inst55~0 (
// Equation(s):
// \inst55~0_combout  = (\ALUSrc1Ori~0_combout  & (!\OpCode~combout [3] & (\OpCode~combout [2] $ (\OpCode~combout [0]))))

	.dataa(\ALUSrc1Ori~0_combout ),
	.datab(\OpCode~combout [2]),
	.datac(\OpCode~combout [0]),
	.datad(\OpCode~combout [3]),
	.cin(gnd),
	.combout(\inst55~0_combout ),
	.cout());
// synopsys translate_off
defparam \inst55~0 .lut_mask = 16'h0028;
defparam \inst55~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_lcell_comb inst34(
// Equation(s):
// \inst34~combout  = (\WriteMem_Sw~0_combout  & (!\OpCode~combout [5] & (\OpCode~combout [3] $ (!\OpCode~combout [2]))))

	.dataa(\WriteMem_Sw~0_combout ),
	.datab(\OpCode~combout [3]),
	.datac(\OpCode~combout [2]),
	.datad(\OpCode~combout [5]),
	.cin(gnd),
	.combout(\inst34~combout ),
	.cout());
// synopsys translate_off
defparam inst34.lut_mask = 16'h0082;
defparam inst34.sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_lcell_comb \inst~0 (
// Equation(s):
// \inst~0_combout  = (\WriteMem_Sw~0_combout  & (!\OpCode~combout [3] & !\OpCode~combout [2]))

	.dataa(\WriteMem_Sw~0_combout ),
	.datab(vcc),
	.datac(\OpCode~combout [3]),
	.datad(\OpCode~combout [2]),
	.cin(gnd),
	.combout(\inst~0_combout ),
	.cout());
// synopsys translate_off
defparam \inst~0 .lut_mask = 16'h000A;
defparam \inst~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_lcell_comb \inst56~2 (
// Equation(s):
// \inst56~2_combout  = (\OpCode~combout [3] & ((\OpCode~combout [2] & ((!\OpCode~combout [0]) # (!\OpCode~combout [1]))) # (!\OpCode~combout [2] & (!\OpCode~combout [1] & !\OpCode~combout [0]))))

	.dataa(\OpCode~combout [3]),
	.datab(\OpCode~combout [2]),
	.datac(\OpCode~combout [1]),
	.datad(\OpCode~combout [0]),
	.cin(gnd),
	.combout(\inst56~2_combout ),
	.cout());
// synopsys translate_off
defparam \inst56~2 .lut_mask = 16'h088A;
defparam \inst56~2 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_lcell_comb \inst56~3 (
// Equation(s):
// \inst56~3_combout  = (!\OpCode~combout [4] & (!\OpCode~combout [5] & \inst56~2_combout ))

	.dataa(\OpCode~combout [4]),
	.datab(\OpCode~combout [5]),
	.datac(\inst56~2_combout ),
	.datad(vcc),
	.cin(gnd),
	.combout(\inst56~3_combout ),
	.cout());
// synopsys translate_off
defparam \inst56~3 .lut_mask = 16'h1010;
defparam \inst56~3 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_lcell_comb \inst57~3 (
// Equation(s):
// \inst57~3_combout  = (\OpCode~combout [3] & (\OpCode~combout [2] & (\OpCode~combout [0] $ (\OpCode~combout [1])))) # (!\OpCode~combout [3] & (!\OpCode~combout [2] & (!\OpCode~combout [0] & !\OpCode~combout [1])))

	.dataa(\OpCode~combout [3]),
	.datab(\OpCode~combout [2]),
	.datac(\OpCode~combout [0]),
	.datad(\OpCode~combout [1]),
	.cin(gnd),
	.combout(\inst57~3_combout ),
	.cout());
// synopsys translate_off
defparam \inst57~3 .lut_mask = 16'h0881;
defparam \inst57~3 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_lcell_comb inst57(
// Equation(s):
// \inst57~combout  = (\inst57~3_combout  & (!\OpCode~combout [5] & !\OpCode~combout [4]))

	.dataa(\inst57~3_combout ),
	.datab(\OpCode~combout [5]),
	.datac(\OpCode~combout [4]),
	.datad(vcc),
	.cin(gnd),
	.combout(\inst57~combout ),
	.cout());
// synopsys translate_off
defparam inst57.lut_mask = 16'h0202;
defparam inst57.sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_lcell_comb \Or3~2 (
// Equation(s):
// \Or3~2_combout  = (\OpCode~combout [3] & (\OpCode~combout [2] & ((!\OpCode~combout [0])))) # (!\OpCode~combout [3] & (!\OpCode~combout [1] & ((\OpCode~combout [2]) # (\OpCode~combout [0]))))

	.dataa(\OpCode~combout [2]),
	.datab(\OpCode~combout [3]),
	.datac(\OpCode~combout [1]),
	.datad(\OpCode~combout [0]),
	.cin(gnd),
	.combout(\Or3~2_combout ),
	.cout());
// synopsys translate_off
defparam \Or3~2 .lut_mask = 16'h038A;
defparam \Or3~2 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_lcell_comb \Or3~3 (
// Equation(s):
// \Or3~3_combout  = (!\OpCode~combout [4] & (!\OpCode~combout [5] & \Or3~2_combout ))

	.dataa(\OpCode~combout [4]),
	.datab(\OpCode~combout [5]),
	.datac(\Or3~2_combout ),
	.datad(vcc),
	.cin(gnd),
	.combout(\Or3~3_combout ),
	.cout());
// synopsys translate_off
defparam \Or3~3 .lut_mask = 16'h1010;
defparam \Or3~3 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_lcell_comb MemToReg1Jal(
// Equation(s):
// \MemToReg1Jal~combout  = (\WriteMem_Sw~0_combout  & (!\OpCode~combout [3] & (!\OpCode~combout [2] & !\OpCode~combout [5])))

	.dataa(\WriteMem_Sw~0_combout ),
	.datab(\OpCode~combout [3]),
	.datac(\OpCode~combout [2]),
	.datad(\OpCode~combout [5]),
	.cin(gnd),
	.combout(\MemToReg1Jal~combout ),
	.cout());
// synopsys translate_off
defparam MemToReg1Jal.lut_mask = 16'h0002;
defparam MemToReg1Jal.sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_lcell_comb OpALU1TipoR(
// Equation(s):
// \OpALU1TipoR~combout  = (\ALUSrc1Ori~0_combout  & (!\OpCode~combout [3] & (!\OpCode~combout [2] & !\OpCode~combout [0])))

	.dataa(\ALUSrc1Ori~0_combout ),
	.datab(\OpCode~combout [3]),
	.datac(\OpCode~combout [2]),
	.datad(\OpCode~combout [0]),
	.cin(gnd),
	.combout(\OpALU1TipoR~combout ),
	.cout());
// synopsys translate_off
defparam OpALU1TipoR.lut_mask = 16'h0002;
defparam OpALU1TipoR.sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_io \RegWrite~I (
	.datain(\inst43~2_combout ),
	.oe(vcc),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(RegWrite));
// synopsys translate_off
defparam \RegWrite~I .input_async_reset = "none";
defparam \RegWrite~I .input_power_up = "low";
defparam \RegWrite~I .input_register_mode = "none";
defparam \RegWrite~I .input_sync_reset = "none";
defparam \RegWrite~I .oe_async_reset = "none";
defparam \RegWrite~I .oe_power_up = "low";
defparam \RegWrite~I .oe_register_mode = "none";
defparam \RegWrite~I .oe_sync_reset = "none";
defparam \RegWrite~I .operation_mode = "output";
defparam \RegWrite~I .output_async_reset = "none";
defparam \RegWrite~I .output_power_up = "low";
defparam \RegWrite~I .output_register_mode = "none";
defparam \RegWrite~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_io \ReadMem~I (
	.datain(\inst48~0_combout ),
	.oe(vcc),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(ReadMem));
// synopsys translate_off
defparam \ReadMem~I .input_async_reset = "none";
defparam \ReadMem~I .input_power_up = "low";
defparam \ReadMem~I .input_register_mode = "none";
defparam \ReadMem~I .input_sync_reset = "none";
defparam \ReadMem~I .oe_async_reset = "none";
defparam \ReadMem~I .oe_power_up = "low";
defparam \ReadMem~I .oe_register_mode = "none";
defparam \ReadMem~I .oe_sync_reset = "none";
defparam \ReadMem~I .operation_mode = "output";
defparam \ReadMem~I .output_async_reset = "none";
defparam \ReadMem~I .output_power_up = "low";
defparam \ReadMem~I .output_register_mode = "none";
defparam \ReadMem~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_io \WriteMem~I (
	.datain(\WriteMem_Sw~combout ),
	.oe(vcc),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(WriteMem));
// synopsys translate_off
defparam \WriteMem~I .input_async_reset = "none";
defparam \WriteMem~I .input_power_up = "low";
defparam \WriteMem~I .input_register_mode = "none";
defparam \WriteMem~I .input_sync_reset = "none";
defparam \WriteMem~I .oe_async_reset = "none";
defparam \WriteMem~I .oe_power_up = "low";
defparam \WriteMem~I .oe_register_mode = "none";
defparam \WriteMem~I .oe_sync_reset = "none";
defparam \WriteMem~I .operation_mode = "output";
defparam \WriteMem~I .output_async_reset = "none";
defparam \WriteMem~I .output_power_up = "low";
defparam \WriteMem~I .output_register_mode = "none";
defparam \WriteMem~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_io \ALUSrc[1]~I (
	.datain(\ALUSrc1Ori~combout ),
	.oe(vcc),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(ALUSrc[1]));
// synopsys translate_off
defparam \ALUSrc[1]~I .input_async_reset = "none";
defparam \ALUSrc[1]~I .input_power_up = "low";
defparam \ALUSrc[1]~I .input_register_mode = "none";
defparam \ALUSrc[1]~I .input_sync_reset = "none";
defparam \ALUSrc[1]~I .oe_async_reset = "none";
defparam \ALUSrc[1]~I .oe_power_up = "low";
defparam \ALUSrc[1]~I .oe_register_mode = "none";
defparam \ALUSrc[1]~I .oe_sync_reset = "none";
defparam \ALUSrc[1]~I .operation_mode = "output";
defparam \ALUSrc[1]~I .output_async_reset = "none";
defparam \ALUSrc[1]~I .output_power_up = "low";
defparam \ALUSrc[1]~I .output_register_mode = "none";
defparam \ALUSrc[1]~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_io \ALUSrc[0]~I (
	.datain(\inst98~1_combout ),
	.oe(vcc),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(ALUSrc[0]));
// synopsys translate_off
defparam \ALUSrc[0]~I .input_async_reset = "none";
defparam \ALUSrc[0]~I .input_power_up = "low";
defparam \ALUSrc[0]~I .input_register_mode = "none";
defparam \ALUSrc[0]~I .input_sync_reset = "none";
defparam \ALUSrc[0]~I .oe_async_reset = "none";
defparam \ALUSrc[0]~I .oe_power_up = "low";
defparam \ALUSrc[0]~I .oe_register_mode = "none";
defparam \ALUSrc[0]~I .oe_sync_reset = "none";
defparam \ALUSrc[0]~I .operation_mode = "output";
defparam \ALUSrc[0]~I .output_async_reset = "none";
defparam \ALUSrc[0]~I .output_power_up = "low";
defparam \ALUSrc[0]~I .output_register_mode = "none";
defparam \ALUSrc[0]~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_io \Branch[1]~I (
	.datain(\inst53~0_combout ),
	.oe(vcc),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(Branch[1]));
// synopsys translate_off
defparam \Branch[1]~I .input_async_reset = "none";
defparam \Branch[1]~I .input_power_up = "low";
defparam \Branch[1]~I .input_register_mode = "none";
defparam \Branch[1]~I .input_sync_reset = "none";
defparam \Branch[1]~I .oe_async_reset = "none";
defparam \Branch[1]~I .oe_power_up = "low";
defparam \Branch[1]~I .oe_register_mode = "none";
defparam \Branch[1]~I .oe_sync_reset = "none";
defparam \Branch[1]~I .operation_mode = "output";
defparam \Branch[1]~I .output_async_reset = "none";
defparam \Branch[1]~I .output_power_up = "low";
defparam \Branch[1]~I .output_register_mode = "none";
defparam \Branch[1]~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_io \Branch[0]~I (
	.datain(\inst55~0_combout ),
	.oe(vcc),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(Branch[0]));
// synopsys translate_off
defparam \Branch[0]~I .input_async_reset = "none";
defparam \Branch[0]~I .input_power_up = "low";
defparam \Branch[0]~I .input_register_mode = "none";
defparam \Branch[0]~I .input_sync_reset = "none";
defparam \Branch[0]~I .oe_async_reset = "none";
defparam \Branch[0]~I .oe_power_up = "low";
defparam \Branch[0]~I .oe_register_mode = "none";
defparam \Branch[0]~I .oe_sync_reset = "none";
defparam \Branch[0]~I .operation_mode = "output";
defparam \Branch[0]~I .output_async_reset = "none";
defparam \Branch[0]~I .output_power_up = "low";
defparam \Branch[0]~I .output_register_mode = "none";
defparam \Branch[0]~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_io \MemToReg[1]~I (
	.datain(\inst34~combout ),
	.oe(vcc),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(MemToReg[1]));
// synopsys translate_off
defparam \MemToReg[1]~I .input_async_reset = "none";
defparam \MemToReg[1]~I .input_power_up = "low";
defparam \MemToReg[1]~I .input_register_mode = "none";
defparam \MemToReg[1]~I .input_sync_reset = "none";
defparam \MemToReg[1]~I .oe_async_reset = "none";
defparam \MemToReg[1]~I .oe_power_up = "low";
defparam \MemToReg[1]~I .oe_register_mode = "none";
defparam \MemToReg[1]~I .oe_sync_reset = "none";
defparam \MemToReg[1]~I .operation_mode = "output";
defparam \MemToReg[1]~I .output_async_reset = "none";
defparam \MemToReg[1]~I .output_power_up = "low";
defparam \MemToReg[1]~I .output_register_mode = "none";
defparam \MemToReg[1]~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_io \MemToReg[0]~I (
	.datain(\inst~0_combout ),
	.oe(vcc),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(MemToReg[0]));
// synopsys translate_off
defparam \MemToReg[0]~I .input_async_reset = "none";
defparam \MemToReg[0]~I .input_power_up = "low";
defparam \MemToReg[0]~I .input_register_mode = "none";
defparam \MemToReg[0]~I .input_sync_reset = "none";
defparam \MemToReg[0]~I .oe_async_reset = "none";
defparam \MemToReg[0]~I .oe_power_up = "low";
defparam \MemToReg[0]~I .oe_register_mode = "none";
defparam \MemToReg[0]~I .oe_sync_reset = "none";
defparam \MemToReg[0]~I .operation_mode = "output";
defparam \MemToReg[0]~I .output_async_reset = "none";
defparam \MemToReg[0]~I .output_power_up = "low";
defparam \MemToReg[0]~I .output_register_mode = "none";
defparam \MemToReg[0]~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_io \OpALU[2]~I (
	.datain(\inst56~3_combout ),
	.oe(vcc),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(OpALU[2]));
// synopsys translate_off
defparam \OpALU[2]~I .input_async_reset = "none";
defparam \OpALU[2]~I .input_power_up = "low";
defparam \OpALU[2]~I .input_register_mode = "none";
defparam \OpALU[2]~I .input_sync_reset = "none";
defparam \OpALU[2]~I .oe_async_reset = "none";
defparam \OpALU[2]~I .oe_power_up = "low";
defparam \OpALU[2]~I .oe_register_mode = "none";
defparam \OpALU[2]~I .oe_sync_reset = "none";
defparam \OpALU[2]~I .operation_mode = "output";
defparam \OpALU[2]~I .output_async_reset = "none";
defparam \OpALU[2]~I .output_power_up = "low";
defparam \OpALU[2]~I .output_register_mode = "none";
defparam \OpALU[2]~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_io \OpALU[1]~I (
	.datain(\inst57~combout ),
	.oe(vcc),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(OpALU[1]));
// synopsys translate_off
defparam \OpALU[1]~I .input_async_reset = "none";
defparam \OpALU[1]~I .input_power_up = "low";
defparam \OpALU[1]~I .input_register_mode = "none";
defparam \OpALU[1]~I .input_sync_reset = "none";
defparam \OpALU[1]~I .oe_async_reset = "none";
defparam \OpALU[1]~I .oe_power_up = "low";
defparam \OpALU[1]~I .oe_register_mode = "none";
defparam \OpALU[1]~I .oe_sync_reset = "none";
defparam \OpALU[1]~I .operation_mode = "output";
defparam \OpALU[1]~I .output_async_reset = "none";
defparam \OpALU[1]~I .output_power_up = "low";
defparam \OpALU[1]~I .output_register_mode = "none";
defparam \OpALU[1]~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_io \OpALU[0]~I (
	.datain(\Or3~3_combout ),
	.oe(vcc),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(OpALU[0]));
// synopsys translate_off
defparam \OpALU[0]~I .input_async_reset = "none";
defparam \OpALU[0]~I .input_power_up = "low";
defparam \OpALU[0]~I .input_register_mode = "none";
defparam \OpALU[0]~I .input_sync_reset = "none";
defparam \OpALU[0]~I .oe_async_reset = "none";
defparam \OpALU[0]~I .oe_power_up = "low";
defparam \OpALU[0]~I .oe_register_mode = "none";
defparam \OpALU[0]~I .oe_sync_reset = "none";
defparam \OpALU[0]~I .operation_mode = "output";
defparam \OpALU[0]~I .output_async_reset = "none";
defparam \OpALU[0]~I .output_power_up = "low";
defparam \OpALU[0]~I .output_register_mode = "none";
defparam \OpALU[0]~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_io \RegDST[1]~I (
	.datain(\MemToReg1Jal~combout ),
	.oe(vcc),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(RegDST[1]));
// synopsys translate_off
defparam \RegDST[1]~I .input_async_reset = "none";
defparam \RegDST[1]~I .input_power_up = "low";
defparam \RegDST[1]~I .input_register_mode = "none";
defparam \RegDST[1]~I .input_sync_reset = "none";
defparam \RegDST[1]~I .oe_async_reset = "none";
defparam \RegDST[1]~I .oe_power_up = "low";
defparam \RegDST[1]~I .oe_register_mode = "none";
defparam \RegDST[1]~I .oe_sync_reset = "none";
defparam \RegDST[1]~I .operation_mode = "output";
defparam \RegDST[1]~I .output_async_reset = "none";
defparam \RegDST[1]~I .output_power_up = "low";
defparam \RegDST[1]~I .output_register_mode = "none";
defparam \RegDST[1]~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_io \RegDST[0]~I (
	.datain(\OpALU1TipoR~combout ),
	.oe(vcc),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(RegDST[0]));
// synopsys translate_off
defparam \RegDST[0]~I .input_async_reset = "none";
defparam \RegDST[0]~I .input_power_up = "low";
defparam \RegDST[0]~I .input_register_mode = "none";
defparam \RegDST[0]~I .input_sync_reset = "none";
defparam \RegDST[0]~I .oe_async_reset = "none";
defparam \RegDST[0]~I .oe_power_up = "low";
defparam \RegDST[0]~I .oe_register_mode = "none";
defparam \RegDST[0]~I .oe_sync_reset = "none";
defparam \RegDST[0]~I .operation_mode = "output";
defparam \RegDST[0]~I .output_async_reset = "none";
defparam \RegDST[0]~I .output_power_up = "low";
defparam \RegDST[0]~I .output_register_mode = "none";
defparam \RegDST[0]~I .output_sync_reset = "none";
// synopsys translate_on

endmodule
